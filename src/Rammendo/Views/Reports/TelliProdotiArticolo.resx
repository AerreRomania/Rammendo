<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PbError.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DBCIDgHDAAAAAElFTkSuQmCC
</value>
  </data>
</root>